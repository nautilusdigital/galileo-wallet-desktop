image: Visual Studio 2017

platform:
  - x64

environment:
  matrix:
    - nodejs_version: 10.11.0

cache:
  - node_modules -> yarn.lock
  - '%USERPROFILE%\.electron -> package.json'

init:
  - git config --global core.autocrlf input

install:
  - ps: Update-NodeJsInstallation $env:nodejs_version $env:PLATFORM
  - node --version
  - yarn --version
  - yarn --frozen-lockfile --non-interactive

build: off

test_script:
  - yarn lint:js
  - yarn test

after_test:
  - yarn cross-env NODE_ENV=production ember electron:build -e production
  - ps: |
      $path = Join-Path -Path "$env:TEMP" -ChildPath csc.p12
      [IO.File]::WriteAllBytes($path, [Convert]::FromBase64String($env:CSC_LINK))
      Set-AppveyorBuildVariable -Name 'CSC_LINK' -Value $path
  - yarn cross-env NODE_ENV=production ember electron:make -e production --build-path electron-out/ember
  - ps: Remove-Item env:CSC_KEY_PASSWORD
  - ps: Remove-Item -Path $env:CSC_LINK

artifacts:
- path: electron-out\make\*.zip
  name: zip
- path: electron-out\make\squirrel.windows\$(PLATFORM)\*.exe
  name: exe
- path: electron-out\make\squirrel.windows\$(PLATFORM)\*.nupkg
  name: nupkg
- path: electron-out\make\squirrel.windows\$(PLATFORM)\RELEASES
  name: releases

before_deploy:
  - ps: |
      $package = Get-Content -Raw -Path package.json | ConvertFrom-Json
      $release = "$($package.productName) $($env:APPVEYOR_REPO_TAG_NAME.Substring(1))"
      Set-AppveyorBuildVariable -Name 'GITHUB_RELEASE' -Value $release

deploy:
  - provider: GitHub
    auth_token: $(GITHUB_TOKEN)
    tag: $(APPVEYOR_REPO_TAG_NAME)
    release: $(GITHUB_RELEASE)
    artifact: zip, exe, nupkg, releases
    draft: true
    prerelease: true
    force_update: true
    on:
      APPVEYOR_REPO_TAG: true
